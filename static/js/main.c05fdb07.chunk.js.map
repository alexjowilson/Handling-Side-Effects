{"version":3,"sources":["components/Login/Login.module.css","components/UI/Input/Input.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Input/Input.js","components/UI/Button/Button.js","store/auth-context.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Input","React","forwardRef","ref","inputRef","useRef","activate","current","focus","useImperativeHandle","control","isValid","invalid","htmlFor","id","label","type","value","onChange","onBlur","Button","button","onClick","disabled","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","useState","setIsLoggedIn","useEffect","localStorage","getItem","Provider","removeItem","setItem","emailReducer","state","action","val","includes","passwordReducer","trim","length","Login","formIsValid","setFormIsValid","useReducer","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailIsValid","passwordIsValid","context","useContext","emailInputRef","passwordInputRef","identifier","setTimeout","clearTimeout","login","onSubmit","event","preventDefault","target","actions","btn","Home","home","Navigation","nav","href","MainHeader","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c05fdb07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"actions\":\"Login_actions__1b5Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__7JYPz\",\"invalid\":\"Input_invalid__1XscM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3idT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__JfAVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__2OmAM\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useImperativeHandle } from 'react';\nimport classes from './Input.module.css';\n\nconst Input = React.forwardRef((props, ref) => {\n\n    const inputRef = useRef();\n\n    const activate = () => {\n        inputRef.current.focus();\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            focus: activate\n        };\n    });\n\n    return (\n        <div\n          className={`${classes.control} ${\n            props.isValid === false ? classes.invalid : ''\n          }`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                ref={inputRef}\n                type={props.type}\n                id={props.id}\n                value={props.value}\n                onChange={props.onChange}\n                onBlur={props.onBlur}\n            ></input>\n        </div>\n    );\n});\n\nexport default Input;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => {},\n    onLogin: (email, password) => {}\n});\n\nexport const AuthContextProvider = (props) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    /* This block of code runs after every component evaluation\n        AND only if dependencies change \n        useEffect has 2 parameters, code of block to be run and array of dependencies\n    */\n    useEffect(() => {\n        /* variable to check if user is logged in previously */\n        const storedUserLoggedInfo = localStorage.getItem('isLoggedIn');\n\n        /* check local storage if the user was logged in */\n        if(storedUserLoggedInfo === '1')\n        {\n        /* set the user to logged in */\n        setIsLoggedIn(true);\n        }\n    }, []);\n\n    /* function to handle when a user logs out */\n    const logoutHandler = () => {\n        // remove user credentials from local storage \n        localStorage.removeItem('isLoggedIn');\n        setIsLoggedIn(false);\n    };\n\n    /* function to handle when a user logs in */\n    const loginHandler = () => {\n        // store user credentials into local storage \n        // 1 -> logged in, 0 -> not logged in\n        localStorage.setItem('isLoggedIn', '1');\n        setIsLoggedIn(true);\n    };\n\n    return <AuthContext.Provider value={{isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}>\n            {props.children}\n        </AuthContext.Provider>;\n}\nexport default AuthContext;","import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport Input from '../UI/Input/Input';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\n\n/* email Reducer */\nconst emailReducer = (state, action) => {\n\n  /* when the user is typing in their email */\n  if(action.type === 'USER_INPUT')\n  {\n    /* return if it a valid email  */\n    return { value: action.val, isValid: action.val.includes('@')}; \n  }\n\n  if(action.type === 'INPUT_BLUR')\n  {\n    return {value: state.value, isValid: state.value.includes('@')};\n  }\n\n  return {value: '', isValid: false};\n};\n\n/* password Reducer */\nconst passwordReducer = (state, action) => {\n\n  if(action.type === 'USER_PASSWORD')\n  {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n\n  if(action.type === 'INPUT_BLUR')\n  {\n    return {value: state.value, isValid: state.value.trim().length > 6}; \n  }\n\n  return {value: '', isValid: false};\n\n};\n\n\nconst Login = (props) => {\n  /*\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  */\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  /* email reducer */\n  const [emailState, dispatchEmail] = useReducer(\n    emailReducer, \n    {\n      value: '',\n      isValid: null \n    }\n  );\n\n  /* password reducer */\n  const [passwordState, dispatchPassword] = useReducer(\n    passwordReducer,\n    {\n      value: '',\n      isValid: null\n    }\n  );\n\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT RUNNING\");\n    }\n  }, []);\n\n  /*  useEffect will only run if either\n      enteredEmail, or enteredPassword changed    \n  */\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  const context = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n\n    console.log(\"Checking for validity from useEffect()\");\n\n    /* Every 2 seconds, check for valid email and password */\n    const identifier = setTimeout(() => {\n      console.log(\"Checking for validation\");\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 2000);    \n\n    /* clear current timer, before starting a new one */\n    return () => {\n      console.log(\"CLEAN UP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  /* function to handle when the user types in their email */\n  const emailChangeHandler = (event) => {\n    //setEnteredEmail(event.target.value);\n\n    /* notify the email Reducer */\n    dispatchEmail({ // pass the type and the email value\n      type: 'USER_INPUT', \n      val: event.target.value\n    });\n\n    /*\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid\n    );\n    */\n  };\n\n  /* function to handle when the user types in their password */\n  const passwordChangeHandler = (event) => {\n    //setEnteredPassword(event.target.value);\n\n    /* notify the password Reducer */ \n    dispatchPassword({ // pass the type and the password value\n      type: 'USER_PASSWORD',\n      val: event.target.value\n    });\n\n    /*\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n    */\n  };\n\n  /* function to validate user email */\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  /* function to validate user password */\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault(); // prevent default HTTP request\n    if(formIsValid){\n      context.onLogin(emailState.value , passwordState.value); // pass the email/password to App.js\n    }\n    else if(!emailIsValid )\n    {\n      emailInputRef.current.focus();\n    }\n    else\n    {\n      passwordInputRef.current.focus();\n    }\n\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n\n        <Input\n          ref={emailInputRef}\n          isValid={emailIsValid}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n\n        <Input\n          ref={passwordInputRef}\n          isValid={passwordIsValid}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}> \n            Login\n          </Button>\n        </div>\n\n      </form>\n    </Card>\n  );\n};\nexport default Login;","import React, { useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\n\nconst Home = (props) => {\n\n  const context = useContext(AuthContext);\n\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n      <Button onClick={context.onLogout}>Log Out</Button>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React, { useContext }from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './Navigation.module.css';\n\nconst Navigation = (props) => {\n\n  const context = useContext(AuthContext);\n\n  return (\n      <nav className={classes.nav}>\n        <ul>\n          {context.isLoggedIn && (\n            <li>\n              <a href=\"/\">Users</a>\n            </li>\n          )}\n          {context.isLoggedIn && (\n            <li>\n              <a href=\"/\">Admin</a>\n            </li>\n          )}\n          {context.isLoggedIn && (\n            <li>\n              <button onClick={context.onLogout}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const context = useContext(AuthContext);\n\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!context.isLoggedIn && <Login/>}\n        {context.isLoggedIn && <Home/>}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(<AuthContextProvider><App/></AuthContextProvider>, document.getElementById('root'));\n"],"sourceRoot":""}